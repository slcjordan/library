#
# Library API
#

openapi: "3.0.0"
info:
  version: 1.0.0
  title: Library API
servers:
  - url: "https://localhost:3000/api/v1"
paths:
  /books:
    get:
      summary: List books in the library
      operationId: listBooks
      parameters:
        - $ref: "#/components/parameters/pageToken"
        - $ref: "#/components/parameters/totalSize"
      responses:
        '200':
          description: success
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/BookList"
        default:
          description: unexpected error
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a book.
      operationId: createBook
      requestBody:
        description: payload
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/Book"
      responses:
        '201':
          description: success
        default:
          description: unexpected error
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Error"
  /books/{isbn}:
    put:
      summary: Update a book.
      parameters:
        - $ref: "#/components/parameters/isbn"
      operationId: updateBook
      requestBody:
        description: payload
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/BookPartial"
      responses:
        '200':
          description: success
        default:
          description: unexpected error
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: Fetch a single book in the library
      operationId: fetchBook
      parameters:
        - $ref: "#/components/parameters/isbn"
      responses:
        '200':
          description: success
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Book"
        default:
          description: unexpected error
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete a single book from the library
      operationId: deleteBook
      parameters:
        - $ref: "#/components/parameters/isbn"
      responses:
        '204':
          description: success
        default:
          description: unexpected error
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Error"
components:
  parameters:
    pageToken:
      description: >
        a pagination placeholder
      name: page_token
      in: query
      required: false
      schema:
        type: string
    totalSize:
      description: >
        a pagination limit
      name: total_size
      in: query
      required: false
      schema:
        type: integer
        format: int32
    isbn:
      name: isbn
      in: path
      required: true
      description: the book isbn
      schema:
        type: integer
        format: int64
  schemas:
    BookList:
      type: object
      required:
        - items
        - next_page_token
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Book'
        next_page_token:
          type: string
    BookPartial:
      type: object
      required:
        - title
      properties:
        title:
          type: string
    Book:
      type: object
      required:
        - title
        - isbn
      properties:
        title:
          type: string
        isbn:
          type: integer
          format: int64
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
        message:
          type: string
